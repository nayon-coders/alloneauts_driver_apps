import 'package:cloud_firestore/cloud_firestore.dart';import 'package:driver/Firebase/controller/car_rent_controller.dart';import 'package:driver/utilitys/colors.dart';import 'package:driver/widgets/appButton.dart';import 'package:driver/widgets/app_network_image.dart';import 'package:driver/widgets/app_toast.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:flutter/material.dart';import '../../Firebase/controller/wish_list_controller.dart';import '../../widgets/alert.dart';import '../../widgets/app_url_loouncher.dart';import '../../widgets/side_byside_text.dart';import '../auth/login.dart';class SingleCar extends StatefulWidget {  final QueryDocumentSnapshot<Map<String, dynamic>>? singleCar;  const SingleCar({Key? key, this.singleCar, }) : super(key: key);  @override  State<SingleCar> createState() => _SingleCarState();}class _SingleCarState extends State<SingleCar> {  final _auth = FirebaseAuth.instance;  bool _isAlreadySendRequest = false;  bool _isLoading = false;  bool _isChecking = true;  bool _isAddingToFav = false;  final _firestorage = FirebaseFirestore.instance; //firebase storage  @override  void initState() {    // TODO: implement initState    super.initState();    _checkIsFavOrNot();  }  bool _isFav = false;  _checkIsFavOrNot()async{    WishListController.checkWishlistExists(carId: widget.singleCar!["car_info"]["car_id"]).then((value){      setState(()=> _isFav = value);    });    print("_isFav $_isFav");  }  @override  Widget build(BuildContext context) {    var size = MediaQuery.of(context).size;    return Scaffold(      backgroundColor: AppColors.mainBg,      appBar: AppBar(        backgroundColor: Color(0xffF3F3F3),        elevation: 0,        title: const Text("Car Information",          style: TextStyle(            color: AppColors.black,            fontSize: 19          ),        ),        leading: InkWell(            onTap: ()=>Navigator.pop(context),            child: Container(          width: 40,          height: 40,          margin: EdgeInsets.all(10),          decoration: BoxDecoration(            color: Color(0xffD9D9D9),            borderRadius: BorderRadius.circular(5),          ),          child: Center(            child: Icon(Icons.arrow_back, color: AppColors.black, size: 20,),          ),        )),        actions: [          InkWell(            onTap: ()=>addTOFav(),              child: Container(            width: 40,            height: 40,            margin: EdgeInsets.all(10),            decoration: BoxDecoration(              color: Color(0xffD9D9D9),              borderRadius: BorderRadius.circular(5),            ),            child: Center(              child: Icon(Icons.favorite, color: _isFav ? Colors.red : AppColors.black, size: 20,),            ),          )),        ],      ),            //body:  ? Center(child: CircularProgressIndicator(),)  :      body : SingleChildScrollView(        child: Column(          children: [            //car image            Container(              width: size.width,              height: 300,              padding: EdgeInsets.all(30),              decoration: BoxDecoration(                color: Color(0xffF3F3F3),                borderRadius: BorderRadius.only(                  bottomLeft: Radius.circular(30),                  bottomRight: Radius.circular(30),                )              ),              child: AppNetWorkImage(url: "${widget.singleCar!["car_info"]["images"]["carImage"]}", height: 200, width: 200, boxFit: BoxFit.contain,),            ),            SizedBox(height: 20,),          Padding(            padding: EdgeInsets.only(left: 20, right: 20),            child: Column(              mainAxisAlignment: MainAxisAlignment.start,              crossAxisAlignment: CrossAxisAlignment.start,              children: [                Text("${widget.singleCar!["car_info"]["name"]}",                  style: TextStyle(                      fontWeight: FontWeight.w600,                      fontSize: 16,                      color: AppColors.black                  ),                ),                SizedBox(height: 10,),                Row(                  children: [                    Icon(Icons.star, color: Colors.amber, size: 20,),                    SizedBox(width: 3,),                    Text("0",                        style: TextStyle(                            fontSize: 14,                            fontWeight: FontWeight.w400,                            color: Colors.grey                        )                    ),                    SizedBox(width: 3,),                    Text("(0)",                        style: TextStyle(                            fontSize: 14,                            fontWeight: FontWeight.w400,                            color: Colors.grey                        )                    )                  ],                ),                SizedBox(height: 20,),                Text("Car Information",                  style: TextStyle(                      fontWeight: FontWeight.w600,                      fontSize: 16,                      color: AppColors.black                  ),                ),                SizedBox(height: 10,),                widget.singleCar!["car_info"]["color"] != null ? SIngleCarDetailsRow(                  title: "Vehicle Color",                  value: "${widget.singleCar!["car_info"]["color"] ?? "Car Color"}",                ) : Center(),                SizedBox(height: 7,),                widget.singleCar!["car_info"]["mileage"] != null ? SIngleCarDetailsRow(                  title: "Vehicle Millage",                  value: "${widget.singleCar!["car_info"]["mileage"]}",                ) : Center(),                SizedBox(height: 7,),                widget.singleCar!["car_info"]["rent_type"] != null ? SIngleCarDetailsRow(                  title: "Rent Type",                  value: "${widget.singleCar!["car_info"]["rent_type"]}",                ) : Center(),                SizedBox(height: 30,),                Text("Renter",                  style: TextStyle(                      fontWeight: FontWeight.w600,                      fontSize: 16,                      color: AppColors.black                  ),                ),                SizedBox(height: 10,),                ListTile(                  leading: ClipRRect(borderRadius: BorderRadius.circular(100), child: AppNetWorkImage(url: "https://img.freepik.com/free-photo/handsome-man-home_144627-9821.jpg", height: 60, width: 60)),                  title: Text("${widget.singleCar!["vendor_info"]["f_name"]} ${widget.singleCar!["vendor_info"]["l_name"]}",                    style: TextStyle(                      fontSize: 15,                      fontWeight: FontWeight.w600,                      color: AppColors.black                    ),                  ),                  subtitle: Row(                    children: [                      Icon(Icons.star, color: Colors.amber, size: 20,),                      SizedBox(width: 3,),                      Text("4.6",                          style: TextStyle(                              fontSize: 14,                              fontWeight: FontWeight.w400,                              color: Colors.grey                          )                      ),                      SizedBox(width: 3,),                      Text("(89)",                          style: TextStyle(                              fontSize: 14,                              fontWeight: FontWeight.w400,                              color: Colors.grey                          )                      )                    ],                  ),                  trailing: SizedBox(                      width: 80,                      child: Row(                    children: [                      InkWell(                          onTap: ()=> widget.singleCar!["vendor_info"]["phone"] != null ? AppUrlLauncher.call(widget.singleCar!["vendor_info"]["phone"] ?? "") : AppToast(text: "Phone is empty. You can not call him.", color: Colors.red),                          child: Container(                        width: 35,                        height: 40,                        margin: EdgeInsets.only(right: 10),                        decoration: BoxDecoration(                          color: Color(0xffD9D9D9),                          borderRadius: BorderRadius.circular(5),                        ),                        child: Center(                          child: Icon(Icons.call, color: AppColors.black, size: 20,),                        ),                      )),                      Container(                        width: 35,                        height: 40,                        decoration: BoxDecoration(                          color: Color(0xffD9D9D9),                          borderRadius: BorderRadius.circular(5),                        ),                        child: Center(                          child: Icon(Icons.location_on, color: AppColors.black, size: 20,),                        ),                      ),                    ],                  )),                )              ],            ),          )          ],        ),      ),      bottomNavigationBar: Container(        width: size.width,        height: 100,        padding: EdgeInsets.all(20),        decoration: BoxDecoration(            color: AppColors.white,            borderRadius: BorderRadius.only(              topLeft: Radius.circular(50),              topRight: Radius.circular(50),            ),            boxShadow: [              BoxShadow(                  color: Colors.grey.shade200,                  offset: Offset(0,1),                  blurRadius: 10,                  spreadRadius: 4              )            ]        ),        child: Row(          mainAxisAlignment: MainAxisAlignment.spaceBetween,          children: [            RichText(                text: TextSpan(                    children: [                      TextSpan(                          text: "\$${widget.singleCar!["car_info"]["price"]}",                          style: TextStyle(                              fontSize: 30,                              fontWeight: FontWeight.w600,                              color: AppColors.black                          )                      ),                      TextSpan(                          text: "/${widget.singleCar!["car_info"]["rent_type"]}",                          style: TextStyle(                              fontSize: 25,                              fontWeight: FontWeight.w400,                              color: Colors.grey                          )                      )                    ]                )            ),            AppButton(              width: 180,              height: 60,              bgColor: _isAlreadySendRequest ? Colors.grey : AppColors.mainColor,              onClick: ()async{                if(_isAlreadySendRequest){                  AppToast(text: "You have already send request to this car owner", color: Colors.red);                  return;                }else{                  setState(() => _isLoading = true);                  await FirebaseCarRentController.sendRequest(data: widget.singleCar!.data(), context: context);                  setState(() => _isLoading = false);                }              },              isLoading: _isLoading,              text: _isAlreadySendRequest ? "Request Sent" : "Send Request",            )          ],        ),      ),    );  }  addTOFav()async {    if(_auth.currentUser == null){      setState(()=> _isAddingToFav = false);      AppAler.showMyDialog(message: "You need to login first.", context: context, onClick: ()=>Navigator.push(context, MaterialPageRoute(builder: (context)=>Login())));      return;    }else{      if(_isFav){        print("remove from fav");        await WishListController.removeFromFavorite(carId: widget.singleCar!["car_info"]["car_id"]).then((value) =>  _checkIsFavOrNot()); //check if this car is in wishlist or not);      }else{        await WishListController.addToFavorite(data:  widget.singleCar!.data()..addAll({"driver_info": _auth.currentUser!.email}));      }      _checkIsFavOrNot();    }  }}